name: Test

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository)
    runs-on: ubuntu-latest
    env:
      target_api_level: 36
      profile: medium_phone

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up JDK 17
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "17"
          distribution: temurin
          cache: gradle
      - uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v4.4.3

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: AVD cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.target_api_level }}-${{ env.profile }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ env.target_api_level }}
          arch: x86_64
          target: google_apis
          profile: ${{ env.profile }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-metrics
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ env.target_api_level }}
          profile: ${{ env.profile }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-metrics
          disable-animations: true
          script: |
            adb shell settings put global auto_time 0
            adb shell su 0 toybox date 0801160025
            ./gradlew packageDebug
            adb shell input keyevent 3
            adb shell settings put secure long_press_timeout 1500
            adb uninstall com.futsch1.medtimer || true
            EXIT_CODE=0 && ./gradlew JacocoDebugCodeCoverage || EXIT_CODE=$? && (adb pull /sdcard/googletest/test_outputfiles app/build/outputs/androidTest-results/ || true) && exit $EXIT_CODE
          cores: 4

      - name: Run fuzzing tests
        run: ./gradlew testDebug -Dfuzzing=true

      - name: Android lint
        run: ./gradlew lint -PnoGradleDeps
        if: github.ref != 'refs/heads/main'

      - name: Android lint
        run: ./gradlew lint
        if: github.ref == 'refs/heads/main'

      - uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: build/reports/jacoco/JacocoDebugCodeCoverage/JacocoDebugCodeCoverage.xml

      - uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: app/build/reports/jacoco/JacocoDebugCodeCoverage/JacocoDebugCodeCoverage.xml

      - name: SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
        run: ./gradlew sonar

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: TestReports
          path: |
            app/build/reports/jacoco/JacocoDebugCodeCoverage/html
            app/build/reports/tests/testDebugUnitTest
            app/build/reports/androidTest/connected/debug
            app/build/reports/lint-results-debug.html
            app/build/outputs/androidTest-results
