name: Unit test

on:
  workflow_dispatch:
  push:

permissions:
  contents: read

jobs:
  unitTest:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      target_api_level: 34

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: AVD cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.target_api_level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.target_api_level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android tests and unit tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.target_api_level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          profile: Pixel5
          script: ./gradlew JacocoDebugCodeCoverage --stacktrace
          cores: 4

      - name: Run fuzzing tests
        run: ./gradlew testDebug -Dfuzzing=true
      - name: Android lint
        run: ./gradlew lint

      - name: SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
        run: ./gradlew sonar

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: TestReports
          path: |
            app/build/reports/jacoco/JacocoDebugCodeCoverage/html
            app/build/reports/tests/testDebugUnitTest
            app/build/reports/androidTest/connected/debug
            app/build/reports/lint-results-debug.html
            app/build/outputs/androidTest-results
